import io;
import Something.more.ioPlus;
import other;
import another.importedClass;
import madeUp;

class myClass extends importedClass {
    int a;
	int anInt;
	boolean aBoolean;
	String aStr;
	String[] strArr;
	int[] iArr;
	ioPlus importedType;
	madeUp madeUpType;



    public int[] put(int n) {
        int[] a;
        return a;
    }

    public boolean m3(boolean arg)  {
        return arg && true;
    }

    public void m1() {
        boolean a;
        this.put(1);
        a = this.m2(true);
        madeUpType.getInt(1);
    }

    public int get() {
        return a;
    }

    public int put(int n) {
        a = n;
        return 1;
    }

    public int m1() {
        myClass c1;
        a = 2;
        io.println(this.get());
        c1 = new myClass();
        io.println(c1.get());
        c1.put(2);
        io.println(c1.get());
        return 3;
    }

    public void m2(int argumentInt, int[] argumentIntArray, madeUp argumentMadeUp) {
        int localInt;
        int[] localIntArray;
        madeUp localMadeUp;


        localIntArray[0] = 1;
        localIntArray[1] = localInt;
        localIntArray[2] = argumentInt;
        localIntArray[3] = argumentIntArray[0];
        localIntArray[4] = localMadeUp.getInt();
        localIntArray[5] = argumentMadeUp.getInt();
        localIntArray[6] = localMadeUp.getInt(localInt, localMadeUp, localIntArray, argumentMadeUp);
        localIntArray[7] = argumentMadeUp.getInt(1, this.m1(), this.put(1), this.put(this.get()), this.put(this.put(this.get())));

        argumentIntArray[0] = 1;
        argumentIntArray[1] = localInt;
        argumentIntArray[2] = argumentInt;
        argumentIntArray[3] = argumentIntArray[0];
        argumentIntArray[4] = localMadeUp.getInt();
        argumentIntArray[5] = argumentMadeUp.getInt();
        argumentIntArray[6] = localMadeUp.getInt(localInt, localMadeUp, localIntArray, argumentMadeUp);
        argumentIntArray[7] = argumentMadeUp.getInt(1, this.m1(), this.put(1), this.put(this.get()), this.put(this.put(this.get())));

        iArr[0] = 1;
        iArr[1] = localInt;
        iArr[2] = argumentInt;
        iArr[3] = argumentIntArray[0];
        iArr[4] = localMadeUp.getInt();
        iArr[5] = argumentMadeUp.getInt();
        iArr[6] = localMadeUp.getInt(localInt, localMadeUp, localIntArray, argumentMadeUp);
        iArr[7] = argumentMadeUp.getInt(1, this.m1(), this.put(1), this.put(this.get()), this.put(this.put(this.get())));

        localInt = localIntArray[localIntArray[0]];
        localIntArray[localIntArray[0]] = localIntArray[localIntArray[0]];

        iArr[iArr[localIntArray[0]]] = iArr[iArr[localIntArray[0]]];
        iArr[iArr[localIntArray[argumentMadeUp.getInt()]]] = iArr[iArr[madeUpType.getInt(iArr[0])]];

        iArr = new int[madeUpType.getInt(iArr.length)];
    }
}